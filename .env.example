# サーバー設定
PORT=8080
NODE_ENV=development

# API設定
REACT_APP_API_URL=http://localhost:8080/api

# BigQuery設定
GOOGLE_CLOUD_PROJECT_ID=your-project-id
BIGQUERY_DATASET=your_dataset_name
BIGQUERY_TABLE=your_table_name
BIGQUERY_LOCATION=US

# カスタムSQLクエリ（オプション）
# BIGQUERY_BUILDINGS_QUERY=SELECT id, name, address, build_year, description, updated_at FROM `project.dataset.table` WHERE deleted_at IS NULL ORDER BY updated_at DESC LIMIT 1000
# BIGQUERY_BUILDING_DETAIL_QUERY=SELECT id, name, address, build_year, description, updated_at FROM `project.dataset.table` WHERE id = @id AND deleted_at IS NULL LIMIT 1

# カスタム物件統合クエリ（重複する物件名の最古レコードを統合）
BIGQUERY_BUILDINGS_QUERY=WITH AddressCheck AS (SELECT ROOMTYPE.lead_property_id, COUNT(DISTINCT CONCAT(IFNULL(prefectures, ''), IFNULL(city, ''), IFNULL(town, ''))) AS unique_addresses FROM `m2m-core.zzz_taniguchi.lead_room_type` ROOMTYPE GROUP BY lead_property_id), AreaZonedForUseCheck AS (SELECT ROOMTYPE.lead_property_id, COUNT(DISTINCT IFNULL(area_zoned_for_use, '')) AS unique_area_zoned_for_use FROM `m2m-core.zzz_taniguchi.lead_room_type` ROOMTYPE GROUP BY lead_property_id), routeOneCheck AS (SELECT ROOMTYPE.lead_property_id, COUNT(DISTINCT IFNULL(route_1, '')) AS unique_route_1 FROM `m2m-core.zzz_taniguchi.lead_room_type` ROOMTYPE GROUP BY lead_property_id), stationOneCheck AS (SELECT ROOMTYPE.lead_property_id, COUNT(DISTINCT IFNULL(station_1, '')) AS unique_station_1 FROM `m2m-core.zzz_taniguchi.lead_room_type` ROOMTYPE GROUP BY lead_property_id), walkMinOneCheck AS (SELECT ROOMTYPE.lead_property_id, COUNT(DISTINCT IFNULL(CAST(walk_min_1 AS STRING), '')) AS unique_walk_min_1 FROM `m2m-core.zzz_taniguchi.lead_room_type` ROOMTYPE GROUP BY lead_property_id), oldest_records AS (SELECT PROPERTY.id, PROPERTY.name, PROPERTY.tag, PROPERTY.mt_representative, PROPERTY.create_date, CASE WHEN AddressCheck.unique_addresses = 1 THEN CASE WHEN ROOMTYPE.prefectures IS NULL AND ROOMTYPE.city IS NULL AND ROOMTYPE.town IS NULL THEN NULL ELSE CONCAT(IFNULL(ROOMTYPE.prefectures, ''), IFNULL(ROOMTYPE.city, ''), IFNULL(ROOMTYPE.town, '')) END WHEN AddressCheck.unique_addresses IS NULL THEN NULL ELSE '部屋タイプ別' END AS adress, CASE WHEN AreaZonedForUseCheck.unique_area_zoned_for_use = 1 THEN ROOMTYPE.area_zoned_for_use WHEN AreaZonedForUseCheck.unique_area_zoned_for_use IS NULL THEN NULL ELSE '部屋タイプ別' END AS area_zoned_for_use, CASE WHEN routeOneCheck.unique_route_1 = 1 THEN ROOMTYPE.route_1 WHEN routeOneCheck.unique_route_1 IS NULL THEN NULL ELSE '部屋タイプ別' END AS route_1, CASE WHEN stationOneCheck.unique_station_1 = 1 THEN ROOMTYPE.station_1 WHEN stationOneCheck.unique_station_1 IS NULL THEN NULL ELSE '部屋タイプ別' END AS station_1, CASE WHEN walkMinOneCheck.unique_walk_min_1 = 1 THEN CAST(ROOMTYPE.walk_min_1 AS STRING) WHEN walkMinOneCheck.unique_walk_min_1 IS NULL THEN CAST(NULL AS STRING) ELSE '部屋タイプ別' END AS walk_min_1, ROW_NUMBER() OVER (PARTITION BY PROPERTY.name ORDER BY PROPERTY.create_date ASC) AS rn FROM `m2m-core.zzz_taniguchi.lead_property` PROPERTY LEFT JOIN `m2m-core.zzz_taniguchi.lead_room_type` ROOMTYPE ON PROPERTY.id = ROOMTYPE.lead_property_id LEFT JOIN AddressCheck ON PROPERTY.id = AddressCheck.lead_property_id LEFT JOIN AreaZonedForUseCheck ON PROPERTY.id = AreaZonedForUseCheck.lead_property_id LEFT JOIN routeOneCheck ON PROPERTY.id = routeOneCheck.lead_property_id LEFT JOIN stationOneCheck ON PROPERTY.id = stationOneCheck.lead_property_id LEFT JOIN walkMinOneCheck ON PROPERTY.id = walkMinOneCheck.lead_property_id WHERE PROPERTY.name IS NOT NULL) SELECT id, name, tag, mt_representative, create_date, adress, area_zoned_for_use, route_1, station_1, walk_min_1 FROM oldest_records WHERE rn = 1 ORDER BY create_date DESC

# Google Cloud認証（オプション - 明示的にサービスアカウントキーを指定する場合）
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json

# その他の設定
# REACT_APP_SLACK_WEBHOOK_URL=https://hooks.slack.com/services/XXXXX/YYYYY/ZZZZZ
